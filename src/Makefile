#@(#) Makefile started by makeout(1) 2021-01-15 22:24:20 generated by:   ...

PROGFILES = ../app/readline.f90 \
 ../example/demo_M_readline.f90 \
 ../example/demo_system_readline.f90 \
$(NULL)

TESTFILES = \
 ../test/test_suite_M_readline.f90 \
$(NULL)

CPROGFILES = 
PROG = ${PROGFILES:.f90=}
CPROG = ${CPROGFILES:.c=}
SRCS =  M_readline.f90 C-M_readline.c 
OBJS =  M_readline.o C-M_readline.o 
TPROG = ${TESTFILES:.f90=}
# platform-specific values you will probably change
LIBS := -lreadline
CC := cc
CFLAGS := -O
FC := gfortran
FFLAGS := -O
F90 := gfortran
F90FLAGS := -O
LDFLAGS := 
# 
# You can either ignore it, or disable the "may be used uninitialized"
# warnings with -Wno-maybe-uninitialized or compile with optimizations
# (-O1 and more).
gfortran: F90=gfortran
gfortran: F90FLAGS := -g -O -Wall -std=f2018 -Wextra -Wno-maybe-uninitialized -Wno-uninitialized
gfortran: all
	@echo built with $(F90)

nvfortran: F90=nvfortran
nvfortran: F90FLAGS := -Minform=inform -Mbackslash -traceback
nvfortran: all
	@echo built with $(F90)

ifort: F90=ifort
ifort: F90FLAGS := -warn all -traceback
ifort: all
	@echo built with $(F90)

nagfor: F90=nagfor
nagfor: F90FLAGS := -C all
nagfor: all
	@echo built with $(F90)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
.SUFFIXES: $(SUFFIXES) .f90 .F90
all: $(PROG) $(CPROG) # $(TPROG)
	@echo "That's all folks!"

$(PROG): $(OBJS)
	-$(F90) $(LDFLAGS) $@.f90 -o $@ $(OBJS) $(LIBS)||echo "ouch: $@.f90 "

.f90.o:
	$(F90) $(F90FLAGS) -c $<
.F90.o:
	$(F90) $(F90FLAGS) -c $<

.PHONY: clean
clean:
	rm -f $(PROG) $(CPROG) $(OBJS) *.mod *.o

.PHONY: run
run: $(PROG)
	$?

.PHONY: doxygen
doxygen: 
	doxygen dox.in

.PHONY: man
man:
	@mandb ../man 1>&2
	@env MANPATH=../man MANWIDTH=256 man -k .|col -b
	@env MANPATH=../man MANWIDTH=80  man -Tutf8 --regex '.*'|col -b

.PHONY: help

help:
	: make    '-- build M_readline module'
	: run     '-- run manpage demo programs and test program'
#	: test    '-- run test program (requires additional modules)'
	: man     '-- show all manpages as text'
	: ship    '-- rebuild archive files of manpages'
	: clean   '-- clean directory of object files and executables'
	: doxygen '-- run doxygen(1) if you have it'
	: help    '-- display this text'

.PHONY: ship
ship:
	: make easily distributed archive files of manpages
	mkdir -p ../docs
	cd ../man/man3;\
	   gzip *.3m_readline;\
	   zip -r ../../docs/manpages.zip *gz;\
	   tar cvfz ../../docs/manpages.tgz *gz;\
	   gunzip *.3m_readline.gz

#$(TPROG): $(OBJS)
#
#	-$(F90) $(LDFLAGS) $@.f90 -o $@ $(OBJS) $(LIBS) # && ./$@ </dev/null

M_readline.o: C-M_readline.o
